/* (c) https://github.com/MontiCore/monticore */
/* generated from model sim.comptest.TickSource*/
/* generated by template mc.umlp.arc.component.Component*/
package sim.comp.gen;

/**
 * 
 * <br><br>
 * Java representation of component TickSource.<br>
 * <br>
 * Generated with MontiArc 2.5.0-SNAPSHOT.<br>
 *
 */
public abstract class ATickSource extends sim.generic.ATimedComponent implements sim.comp.gen.interfaces.ITickSource, sim.generic.ISimComponent {
    
    /* generated by template mc.umlp.arc.component.port.PortAttributes*/
    private sim.port.IOutPort timeOut;
/* generated by template mc.umlp.arc.component.port.PortAttributesGetter*/
    public sim.port.IOutPort<Object> getTimeOut() {
        sim.port.IOutPort<Object> _port = null;
        if (timeOut == null) {
            timeOut = getScheduler().createOutPort();
        }
    
        _port = timeOut;    
        return _port;
    }
/* generated by template mc.umlp.arc.component.port.PortAttributesSetter*/
    public void setTimeOut(sim.port.IPort port) {
        if (this.timeOut == null) {
            this.timeOut = port;            
        }
        else {
            ((sim.port.IOutSimPort) this.timeOut).addReceiver(port);
        }
        
    }
/* generated by template mc.umlp.arc.component.port.PortOutDelegate*/
    /**
     * Is used to send messages through the outgoing port 
     * timeOut.
     */
    protected void sendTimeOut(final Object message) {
        this.getTimeOut().send(sim.generic.Message.of(message));
        
    }

    /* generated by template mc.umlp.arc.component.port.PortTimeIn*/
    
    private sim.port.IInSimPort<Object> _sourceTickPort;
    
    @Override
    public sim.port.IInPort<Object> _getSourceTickPort() {
        return _sourceTickPort;
    }

    
    /* generated by template mc.umlp.arc.component.methods.CheckConstraints*/
    /*
     * (non-Javadoc)
     * @see sim.generic.IComponent#checkConstraints()
     */
    @Override
    public void checkConstraints() {
        
        // Empty implementation. To add handcoded constraints override 
        // this method!
    }/* generated by template mc.umlp.arc.component.methods.Constructor*/
    public ATickSource() {
        super();
        
        
    }
/* generated by template mc.umlp.arc.component.methods.HandleMessage*/
    /*
     * (non-Javadoc)
     * @see sim.generic.IComponent#handleMessage(sim.port.IInPort, sim.generic.Message<?>)
     */
    @Override
    public void handleMessage(sim.port.IInPort<?> port, sim.generic.Message<?> message) {
        
    }

/* generated by template mc.umlp.arc.component.methods.HandleTick*/
    /* (non-Javadoc)
     * @see sim.generic.AComponent#handleTick()
     */
    @Override
    public void handleTick() {
        
        /* generated by template mc.umlp.arc.component.methods.HandleTickPorts*/
        getTimeOut().send(sim.generic.Tick.<Object> get());

        
        incLocalTime();
        timeStep();
        
    }
    
/* generated by template mc.umlp.arc.component.methods.Setup*/
    /* (non-Javadoc)
     * @see sim.generic.IComponent#setup(sim.IScheduler, sim.error.ISimulationErrorHandler)
     */
    @Override
    public void setup(sim.IScheduler scheduler, sim.error.ISimulationErrorHandler errorHandler) {
        
        // set scheduler
        setScheduler(scheduler);
        // set the errorHandler
        setErrorHandler(errorHandler);
        setComponentName("sim.comptest.TickSource");
	    
	    
        
        /* generated by template mc.umlp.arc.component.methods.setup.TimeInPort*/
        this._sourceTickPort = scheduler.createInPort();
        this._sourceTickPort.setup(this, scheduler);

	    
	    
	    
	    
	     
    }    
    
    

    
}
