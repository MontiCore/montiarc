# (c) https://github.com/MontiCore/monticore  
# Build JAVA applications using Apache Maven (http://maven.apache.org)

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
image: registry.git.rwth-aachen.de/monticore/container-registry/maven:3.5.4-jdk-8-alpine

cache:
  paths:
    - .m2/repository/
  key: "$CI_COMMIT_SHA" # Cache across branch and stage

stages:
  - build
  - test
  - post-test
  - check
      
Validate Gradle:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.7-jdk8
  stage: build
  allow_failure: false
  artifacts:
    paths:
      - applications/bumperbot/target/
      - applications/factory/target/
      - applications/factoryTask/target/
      - generators/cd2pojo/target/
      - generators/ma2java/target/
      - languages/arc-fe/target/
      - languages/behavior-fe/target/
      - languages/montiarc-fe/target/
      - libraries/lejos-rte/target/
      - libraries/majava-rte/target/
      - libraries/maJavaLib/target/
      - libraries/simulator-rte/target/
  script:
    - gradle clean assemble
    
.unit_test_template: &unit_test_definition
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.7-jdk8
  stage: test
  dependencies: 
    - Validate Gradle #download artifacts from build
  needs: ["Validate Gradle"]
  script:
    - gradle test

Unit Test JDK 8:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.7-jdk8
  allow_failure: false
  <<: *unit_test_definition

Unit Test JDK 17:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.7-jdk17
  # We do not require JDK 17 support yet. We appreciate it though.
  allow_failure: true
  <<: *unit_test_definition

Deploy Nexus:
  image: registry.git.rwth-aachen.de/monticore/container-registry/maven:3-jdk-8
  stage: post-test
  script:
    - gradle publish -PmavenPassword=$pass -PmavenUser=$user
  only:
    - develop

Code Quality:
  stage: post-test
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  cache: {}
  tags:
    - shell
    - docker
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    # Update Codeclimate and SonarJava Plugin
    - docker run  --rm
      --env CODECLIMATE_CODE="$PWD"
      --env CONTAINER_TIMEOUT_SECONDS=150000
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate engines:install
    # Check Code Quality
    - docker run --rm
      --env CODECLIMATE_CODE="$PWD"
      --env CONTAINER_TIMEOUT_SECONDS=150000
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate analyze -f json > codeclimate.json
    #"registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: codeclimate.json

checkMDLinks:
  stage: check
  dependencies:
    - Code Quality
  script:
    - "curl --location --header \"PRIVATE-TOKEN: $secibuildtoken\" \"https://git.rwth-aachen.de/api/v4/projects/monticore%2Fauxiliary-development-tools%2Fmdlinkchecker/jobs/artifacts/master/raw/target/libs/MDLinkCheckerCLI.jar?job=build\" --output MDLinkCheckerCLI.jar"
    - "url=https://git.rwth-aachen.de/monticore/montiarc/core/-/tree/develop"
    - "linkCheckRes=$(java -jar MDLinkCheckerCLI.jar -url $url -t $secibuildtoken)"
    - "echo \"$linkCheckRes\""
    - "if [[ $linkCheckRes == *\"ERROR\"* ]]; then exit 1; fi"
  only:
    - develop
