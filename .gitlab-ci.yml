# (c) https://github.com/MontiCore/monticore  
# Build JAVA applications using Apache Maven (http://maven.apache.org)

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository/
  key: "$CI_COMMIT_SHA" # Cache across branch and stage

stages:
  - build
  - test
  - post-test
  - check
      
Validate Gradle:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk8
  stage: build
  allow_failure: false
  artifacts:
    paths:
      - applications/bumperbot/target/
      - applications/factory/target/
      - applications/factoryTask/target/
      - generators/cd2pojo/target/
      - generators/ma2java/target/
      - languages/arc-fe/target/
      - languages/behavior-fe/target/
      - languages/montiarc-fe/target/
      - libraries/lejos-rte/target/
      - libraries/majava-rte/target/
      - libraries/simulator-rte/target/
  script:
    - gradle clean assemble
    
.unit_test_template: &unit_test_definition
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk8
  stage: test
  dependencies: 
    - Validate Gradle #download artifacts from build
  needs: ["Validate Gradle"]
  script:
    - gradle test aggregatedJacocoReport
  artifacts:
    paths:
      - target/reports/jacoco/aggregatedJacocoReport/aggregatedJacocoReport.xml
      - target/reports/jacoco/aggregatedJacocoReport/aggregatedJacocoReport.csv

Unit Test JDK 8:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk8
  allow_failure: false
  <<: *unit_test_definition

Unit Test JDK 17:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk17
  # We do not require JDK 17 support yet. We appreciate it though.
  allow_failure: true
  <<: *unit_test_definition

Deploy Nexus:
  image: registry.git.rwth-aachen.de/monticore/container-registry/gradle:6.8.2-jdk8
  stage: post-test
  script:
    - gradle publish -PmavenPassword=$pass -PmavenUser=$user
  only:
    - develop

# Gitlab can visualize cobertura code coverage reports, but we have jacoco reports.
# Thus, we will convert our jacoco report to a cobertura report:
# Moreover we will print jacoco's instruction coverage to the command line so that gitlab parses it and creates a
# coverage badge for us.
Code Coverage:
  stage: post-test
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - awk -F "," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/",  instructions, "instructions covered"; print "Total " 100*covered/instructions, "% covered" }' target/reports/jacoco/aggregatedJacocoReport/aggregatedJacocoReport.csv
    - python /opt/cover2cover.py target/reports/jacoco/aggregatedJacocoReport/aggregatedJacocoReport.xml languages/arc-fe/src/main/java/ applications/bumperbot/src/main/java/ applications/factory/src/main/java/ applications/factoryTask/src/main/java/ generators/cd2pojo/src/main/java/ generators/ma2java/src/main/java/ languages/arc-fe/src/main/java/ languages/behavior-fe/src/main/java/ languages/montiarc-fe/src/main/java/ libraries/lejos-rte/src/main/java/ libraries/majava-rte/src/main/java/ libraries/simulator-rte/src/main/java/ > cobertura.xml
  needs: ["Unit Test JDK 8"]
  dependencies:
    - Unit Test JDK 8
  artifacts:
    reports:
      cobertura: cobertura.xml

checkMDLinks:
  stage: check
  image: registry.git.rwth-aachen.de/monticore/container-registry/maven:3.5.4-jdk-8-alpine
  dependencies:
    - Code Coverage
  script:
    - "curl --location --header \"PRIVATE-TOKEN: $secibuildtoken\" \"https://git.rwth-aachen.de/api/v4/projects/monticore%2Fauxiliary-development-tools%2Fmdlinkchecker/jobs/artifacts/master/raw/target/libs/MDLinkCheckerCLI.jar?job=build\" --output MDLinkCheckerCLI.jar"
    - "url=https://git.rwth-aachen.de/monticore/montiarc/core/-/tree/develop"
    - "linkCheckRes=$(java -jar MDLinkCheckerCLI.jar -url $url -t $secibuildtoken)"
    - "echo \"$linkCheckRes\""
    - "if [[ $linkCheckRes == *\"ERROR\"* ]]; then exit 1; fi"
  only:
    - develop
