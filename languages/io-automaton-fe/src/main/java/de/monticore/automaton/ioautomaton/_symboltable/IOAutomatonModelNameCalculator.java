/* generated from model null*/
/* generated by template symboltable.ModelNameCalculator*/




package de.monticore.automaton.ioautomaton._symboltable;

import java.util.LinkedHashSet;
import java.util.Set;

import de.monticore.symboltable.SymbolKind;

public class IOAutomatonModelNameCalculator extends de.monticore.CommonModelNameCalculator {

  @Override
  public Set<String> calculateModelNames(final String name, final SymbolKind kind) {
    final Set<String> calculatedModelNames = new LinkedHashSet<>();

      if (VariableSymbol.KIND.isKindOf(kind)) {
        calculatedModelNames.addAll(calculateModelNameForVariable(name));
      }
      if (AutomatonSymbol.KIND.isKindOf(kind)) {
        calculatedModelNames.addAll(calculateModelNameForAutomaton(name));
      }
      if (StateSymbol.KIND.isKindOf(kind)) {
        calculatedModelNames.addAll(calculateModelNameForState(name));
      }
      if (TransitionSymbol.KIND.isKindOf(kind)) {
        calculatedModelNames.addAll(calculateModelNameForTransition(name));
      }

    return calculatedModelNames;
  }

  protected Set<String> calculateModelNameForVariable(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }
  protected Set<String> calculateModelNameForAutomaton(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }
  protected Set<String> calculateModelNameForState(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }
  protected Set<String> calculateModelNameForInitialStateDeclaration(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }
  protected Set<String> calculateModelNameForTransition(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }
  protected Set<String> calculateModelNameForGuard(String name) {
    final Set<String> modelNames = new LinkedHashSet<>();
    modelNames.add(name);
    return modelNames;
  }


}
