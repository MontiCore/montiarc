/* generated from model null*/
/* generated by template symboltable.SymbolTableCreator*/




package de.monticore.lang.montiarc.montiarcautomaton._symboltable;

import de.se_rwth.commons.logging.Log;

import de.monticore.lang.montiarc.montiarcautomaton._visitor.MontiArcAutomatonVisitor;
import de.monticore.lang.montiarc.montiarcautomaton._visitor.MontiArcAutomatonDelegatorVisitor;
import de.monticore.lang.montiarc.montiarcautomaton._visitor.CommonMontiArcAutomatonDelegatorVisitor;
import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolverConfiguration;
import de.monticore.symboltable.Scope;
import java.util.Deque;

public class MontiArcAutomatonSymbolTableCreator extends de.monticore.symboltable.CommonSymbolTableCreator
         implements MontiArcAutomatonVisitor {

  // TODO doc
  private final MontiArcAutomatonDelegatorVisitor visitor = new CommonMontiArcAutomatonDelegatorVisitor();

  public MontiArcAutomatonSymbolTableCreator(
    final ResolverConfiguration resolverConfig, final MutableScope enclosingScope) {
    super(resolverConfig, enclosingScope);
    initSuperSTC();
  }

  public MontiArcAutomatonSymbolTableCreator(final ResolverConfiguration resolverConfig, final Deque<MutableScope> scopeStack) {
    super(resolverConfig, scopeStack);
    initSuperSTC();
  }

  private void initSuperSTC() {
    // TODO doc
      // visitor.set_de_monticore_lang_montiarc_montiarcautomaton__visitor_MontiArcAutomatonVisitor(de.monticore.lang.montiarc.montiarcautomaton._visitor.MontiArcAutomatonSymbolTableCreator(resolverConfig, scopeStack));
      // visitor.set_de_monticore_lang_montiarc_montiarcbehavior__visitor_MontiArcBehaviorVisitor(de.monticore.lang.montiarc.montiarcbehavior._visitor.MontiArcBehaviorSymbolTableCreator(resolverConfig, scopeStack));
      // visitor.set_de_monticore_automaton_ioautomatonjava__visitor_IOAutomatonJavaVisitor(de.monticore.automaton.ioautomatonjava._visitor.IOAutomatonJavaSymbolTableCreator(resolverConfig, scopeStack));
  }

  /**
  * Creates the symbol table starting from the <code>rootNode</code> and
  * returns the first scope that was created.
  *
  * @param rootNode the root node
  * @return the first scope that was created
  */
  public Scope createFromAST(de.monticore.lang.montiarc.montiarc._ast.ASTMACompilationUnit rootNode) {
    Log.errorIfNull(rootNode, "0xA7004_750 Error by creating of the MontiArcAutomatonSymbolTableCreator symbol table: top ast node is null");
    rootNode.accept(this);
    return getFirstCreatedScope();
  }

  private MontiArcAutomatonVisitor realThis = this;

  public MontiArcAutomatonVisitor getRealThis() {
    return realThis;
  }

  @Override
  public void setRealThis(MontiArcAutomatonVisitor realThis) {
    if (this.realThis != realThis) {
      this.realThis = realThis;
      visitor.setRealThis(realThis);
    }
  }

}
