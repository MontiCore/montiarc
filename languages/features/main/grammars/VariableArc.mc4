/* (c) https://github.com/MontiCore/monticore */

/* This is a MontiCore stable grammar.
 * Adaptations -- if any -- are conservative. */

/**
 * This grammar defines the basic structural elements required for a variable
 * component architecture. The grammar contains definitions for if-statements,
 * constraints, and features.
 */
component grammar VariableArc extends ArcBasis {

  start ArcElement;

  /**
   * ASTFeatureDeclaration declares one or more features by specifying their name.
   *
   * @attribute features A list of declared feature identifiers.
   */
  ArcFeatureDeclaration implements ArcElement <110> =
    key("feature") (ArcFeature || ",")* ";"
  ;

  /**
   * ASTFeature defines the feature identifier, also creates corresponding symbols.
   *
   * @attribute name The name of the feature.
   */
  symbol ArcFeature = Name;

  /**
   * Defines the variable elements of a component and the condition for their
   * inclusion. The condition is a boolean expression over configurable
   * component variables, that is, parameters and features.
   */
  ArcVarIf implements ArcElement =
    "varif" "(" condition:Expression ")" then:ArcElement
    ("else" otherwise:ArcElement)?
  ;

  /**
   * ASTArcConstraintDeclaration defines rules for valid component instances.
   *
   * @attribute expression The constraint, which must be a valid boolean expression.
   */
  ArcConstraintDeclaration implements ArcElement <110> =
    "constraint" "(" Expression ")" ";"
  ;
}
