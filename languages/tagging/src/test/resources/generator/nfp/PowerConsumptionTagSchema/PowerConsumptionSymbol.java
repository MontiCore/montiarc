/* generated from model null*/
/* generated by template templates.de.monticore.lang.montiarc.tagschema.ValuedTagType*/


package nfp.PowerConsumptionTagSchema;

import de.monticore.lang.montiarc.tagging._symboltable.TagKind;
import de.monticore.lang.montiarc.tagging._symboltable.TagSymbol;

import javax.measure.Measure;
import javax.measure.quantity.Power;
import javax.measure.unit.Unit;

/**
 * Created by ValuedTagType.ftl
 */
public class PowerConsumptionSymbol extends TagSymbol {
  public static final PowerConsumptionKind KIND = PowerConsumptionKind.INSTANCE;

  public PowerConsumptionSymbol(Measure<? extends Number, Power> value) {
    this(KIND, value);
  }

  public PowerConsumptionSymbol(Number number, Unit<Power> unit) {
    this(KIND, number, unit);
  }

  protected PowerConsumptionSymbol(PowerConsumptionKind kind, Measure<? extends Number, Power> value) {
    super(kind, value);
  }

  protected PowerConsumptionSymbol(PowerConsumptionKind kind, Number number, Unit<Power> unit) {
    this(kind, number.toString().contains(".") ?
      Measure.valueOf(number.doubleValue(), unit) :
      Measure.valueOf(number.intValue(),
          unit));
  }

  public Measure<? extends Number, Power> getValue() {
     return getValue(0);
  }

  public Number getNumber() {
    return getValue().getValue();
  }

  public Unit<Power> getUnit() {
    return getValue().getUnit();
  }

  @Override
  public String toString() {
    return String.format("PowerConsumption = %s %s",
      getNumber(), getUnit());
  }

  public static class PowerConsumptionKind extends TagKind {
    public static final PowerConsumptionKind INSTANCE = new PowerConsumptionKind();

    protected PowerConsumptionKind() {
    }
  }
}