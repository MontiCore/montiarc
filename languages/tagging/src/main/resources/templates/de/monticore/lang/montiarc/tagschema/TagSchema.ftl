${tc.signature("packageName", "schemaName", "tagTypeNames")}

package ${packageName}.${schemaName};

import de.monticore.CommonModelingLanguage;
import de.monticore.lang.montiarc.tagging._symboltable.TagableModelingLanguage;
import de.monticore.symboltable.resolving.CommonResolvingFilter;

/**
 * generated by TagSchema.ftl
 */
public class ${schemaName} {

  protected static ${schemaName} instance = null;

  protected ${schemaName}() {}

  protected static ${schemaName} getInstance() {
    if (instance == null) {
      instance = new ${schemaName}();
    }
    return instance;
  }

  protected void doRegisterTagTypes(TagableModelingLanguage modelingLanguage) {
    // all ModelingLanguage instances are actually instances of CommonModelingLanguage
    if(modelingLanguage instanceof CommonModelingLanguage) {
      CommonModelingLanguage commonModelingLanguage = (CommonModelingLanguage)modelingLanguage;

      <#list tagTypeNames as tagTypeName>
      modelingLanguage.addTagSymbolCreator(new ${tagTypeName}SymbolCreator());
      commonModelingLanguage.addResolver(CommonResolvingFilter.create(${tagTypeName}Symbol.KIND));
      </#list>
    }
  }

  public static void registerTagTypes(TagableModelingLanguage modelingLanguage) {
    getInstance().doRegisterTagTypes(modelingLanguage);
  }
}