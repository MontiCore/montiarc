/* (c) https://github.com/MontiCore/monticore */

/* Alpha-version: This is intended to become a MontiCore stable grammar. */

/**
 * TODO: describe
 *
 * This grammar is part of the MontiArc langauge definition,
 * which are organized according to this extension hierachy:
 * * ArcBasis.mc4
 * * -- ComfortableArc.mc4
 * * -- GenericArc.mc4
 * * -- AssumptionGuarantee.mc4
 * * -- IfThenElse.mc4
 * * -- MessageHandling.mc4
 * * -- ValueRanges.mc4
 *
 * * ArcCore.mc4 composes
 *   + ArcBasis.mc4 + ComfortableArc.mc4 + GenericArc.mc4
 *   and builds the core of architectural modelling
 *   (still without concrete expressions, literals, etc.)
 *
 * Furthermore MontiArc.mc4 extends Arc.mc4 to a complete
 * language, with Expressions, Literals, etc. defined
 * * ArcCore.mc4
 * * -- MontiArc.mc4
 */

component grammar IfThenElse extends ArcBasis {

    /**
     * Executionblocks contain If and Else Statements that
     * control the behavior combined with handwritten code
     * functions.
     */
    ExecutionBlock implements ArcElement =
      "behavior" "{"
        ExecutionIfStatement
        ExecutionElseIfStatement*
        ExecutionElseStatement
      "}";

    /**
     * IfStatements specify which function in the
     * handwritten implementation should be executed depending
     * on the presence on messages on incoming ports and
     * values of current messages.
     */
    ExecutionIfStatement =
        key("if") (guard:Expression)
        ((method:Name "()" )? | (PortValuation || ",")+) ";";

    ExecutionElseIfStatement =
      key("else") ExecutionIfStatement;

    ExecutionElseStatement =
        key("else") ((method:Name "()" )? | (PortValuation || ",")+) ";";

    PortValuation = (port:Name@Port "=" value:Expression);
}
