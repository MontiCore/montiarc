package de.monticore.lang.montiarc;

/**
 * Grammar for common elements that should be imported from somewhere else in future.
 */
grammar Common extends de.monticore.java.JavaDSL, de.monticore.common.Common {

  /**
  * Use this interface to embedd values.
  * It has to be implemented by all values and additionally servers
  * as an extension point to add futher values to sublanguages.
  */ 
  interface Value;

  /**
  * A signed literal value.
  * @example "Any String", -3, 17.3
  *
  * @attribute value the concrete literal value
  */
  LiteralValue implements Value =
        value:SignedLiteral;

  /**
  * Parameters are used in configurable components.
  *
  * @attribute Type the type of the parameter
  * @attribute name the name of the parameter
  */
  Parameter =
    Type Name ("=" defaultValue:LiteralValue)?;

  // TODO where should invariant binding take place?
  InvariantContent = BlockStatement | OCLExpression;
  
  // TODO what is an OCLExpression? here it is java
  OCLExpression = Expression;

}
