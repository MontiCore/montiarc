/* (c) https://github.com/MontiCore/monticore */

group = "montiarc.applications"

def hwcDir = "$projectDir/src/main/java"
def genDir = "$buildDir/generated-sources"

def generatorLogbackConfig = "$projectDir/logback.xml"
def generatorLogbackOutDir = "$buildDir/logs"

sourceSets {
  main {
    java.srcDirs += ["$genDir"]
  }
}

configurations {
  generateCD
  generateMA
}

dependencies {
  //MontiCore dependencies
  implementation("de.se_rwth.commons:se-commons-logging:$se_commons_version")
  implementation("de.se_rwth.commons:se-commons-utilities:$se_commons_version")

  //Internal dependencies
  generateCD(project(":generators:cd2pojo"))
  generateMA(project(":generators:ma2java"))
  implementation(project(":languages:montiarc-fe"))
  implementation(project(":libraries:majava-rte"))
  implementation(project(":libraries:lejos-rte"))

  //Other dependencies
  testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version")
  testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version")

  // loggers for generators
  generateCD("ch.qos.logback:logback-core:$logback_version")
  generateCD("ch.qos.logback:logback-classic:$logback_version")
  generateMA("ch.qos.logback:logback-core:$logback_version")
  generateMA("ch.qos.logback:logback-classic:$logback_version")
}

task generateCD(type: JavaExec) {
  classpath = configurations.generateCD
  mainClass = "de.monticore.cd2pojo.POJOGeneratorScript"

  args("$projectDir/src/main/resources, $buildDir/$librarymodels_classifier", "$genDir", "$hwcDir")
  outputs.dir(genDir)

  // configuring logging during generation
  systemProperties "logback.configurationFile": "$generatorLogbackConfig"
  systemProperties "LOGBACK_TARGET_DIR" : "$generatorLogbackOutDir"
  systemProperties "LOGBACK_TARGET_FILE_NAME" : "logback-cd2pojo"
}

task generateMontiArc(type: JavaExec) {
  classpath = configurations.generateMA
  mainClass = "montiarc.generator.MontiArcCLI"

  args("-mp", "$projectDir/src/main/resources", "$buildDir/$librarymodels_classifier",
      "-path", "$genDir", "-o", "$genDir", "-hwc", "$hwcDir")
  outputs.dir(genDir)

  // configuring logging during generation
  systemProperties "logback.configurationFile": "$generatorLogbackConfig"
  systemProperties "LOGBACK_TARGET_DIR" : "$generatorLogbackOutDir"
  systemProperties "LOGBACK_TARGET_FILE_NAME" : "logback-ma2java"
}

generateMontiArc.dependsOn(generateCD)
compileJava.dependsOn(generateMontiArc)

publishing {
  publications {
    mavenJava(MavenPublication) {
      from(components.java)
    }
  }
  repositories.maven {
    name = "$SE_Nexus_ID"
    credentials.username(mavenUser)
    credentials.password(mavenPassword)
    url = version.endsWith('SNAPSHOT') ? "$snapshotsRepoUrl" : "$releasesRepoUrl"
  }
}