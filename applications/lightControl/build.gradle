/* (c) https://github.com/MontiCore/monticore */

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.6.0"
}

group = "montiarc.applications"

def hwcDir = "$projectDir/src/main/java"
def genDir = "$buildDir/generated-sources"

def generatorLogbackConfig = "$projectDir/logback.xml"
def generatorLogbackOutDir = "$buildDir/logs"

sourceSets {
    main {
        java.srcDirs += ["$genDir"]
    }
}

configurations {
    generateKT
}

dependencies {
    //MontiCore dependencies
    implementation("de.se_rwth.commons:se-commons-logging:$se_commons_version")
    implementation("de.se_rwth.commons:se-commons-utilities:$se_commons_version")

    //Internal dependencies
    generateKT(project(":generators:ma2ktln"))
    implementation(project(":languages:montiarc-fe"))
    implementation(project(":libraries:majava-rte"))
    implementation(project(":libraries:dynsim-rte"))

    //Other dependencies
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version")

    // loggers for generators
    generateKT("ch.qos.logback:logback-core:$logback_version")
    generateKT("ch.qos.logback:logback-classic:$logback_version")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

task generateKotlin(type: JavaExec) {
    classpath = configurations.generateKT
    mainClass = "montiarc.generator.ma2kotlin.ModeArcTool"

    args("-mp", "$projectDir/src/main/resources", /*"$buildDir/$librarymodels_classifier",*/
            "-path", "$genDir", /* "-o", "$genDir", "-hwc", "$hwcDir",*/ "-c2mc")
    outputs.dir(genDir)

    // configuring logging during generation
    systemProperties "logback.configurationFile": "$generatorLogbackConfig"
    systemProperties "LOGBACK_TARGET_DIR" : "$generatorLogbackOutDir"
    systemProperties "LOGBACK_TARGET_FILE_NAME" : "logback-ma2ktln"
}


generateKotlin.mustRunAfter(project.collect {it.project(":generators:ma2ktln").getTasks().withType(Test) })
compileJava.dependsOn(generateKotlin)
compileKotlin.dependsOn(generateKotlin)

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
    repositories.maven {
        name = "$SE_Nexus_ID"
        credentials.username(mavenUser)
        credentials.password(mavenPassword)
        url = version.endsWith('SNAPSHOT') ? "$snapshotsRepoUrl" : "$releasesRepoUrl"
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}